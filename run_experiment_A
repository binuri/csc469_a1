#!/usr/bin/env python

import subprocess
import sys
import re
import os

sample_sets = 3
if len(sys.argv) == 2:
    sample_sets = int(sys.argv[1])

if (len(sys.argv) > 2 or (sample_sets < 2)):
    print "Usage: run_experiment_A [<num_inactive_samples>]\n"
    exit(1)


subprocess.call(["make"]);
tracker_out = subprocess.check_output(["./tracker", str(sample_sets)]);

extracted_results = [0] 
current_total = 0
num_samples = 0

for l in tracker_out.splitlines():
   
    parsed_line = re.match('(.*)\((\d+\.\d+) ms\)', l) 
	
    if not parsed_line:
        continue

    
    if (num_samples < 2):
        num_samples +=1
        continue
   
    duration = float(parsed_line.group(2))
    current_total = current_total +  duration
    extracted_results.append(current_total)

proc = subprocess.Popen(['gnuplot', '-p'], stdin=subprocess.PIPE)
script = """\
    set output "%(output)s"
    set title "%(title)s"
    set xlabel "Time (ms)"
    set nokey
    set noytics
    set xtics 4
    set yrange [-5:1]
    set term x11 
    set size 1, 0.35
    set origin 0, 0.3
    """ % {'title': "Active and Inactive periods", 'output': "gnuplot_PartA1.out"}

proc.stdin.write(script);

active = 1
for i in range (0, (sample_sets - 1) * 2):

    properties = dict(sample=i+1, left=extracted_results[i], bottom=0,
                 right=extracted_results[i+1], top=1,
                 color='blue' if active else 'red')
    
    set_prop = ('set object %(sample)d rect from %(left)f, %(bottom)f to '
            '%(right)f, %(top)f, 2 fc rgb "%(color)s" fs solid border lc rgb "#FF0000" lw 0'
            '\n') % properties

    proc.stdin.write(set_prop)
    
    active = active ^ 1


properties = dict(maxend=extracted_results[i], height=1)
set_prop = ('plot [0:%(maxend)d] [0:%(height)d] '
              '0 title "Active", '
              '0 title "Inactive"'
              '\n') % properties
proc.stdin.write(set_prop)
proc.stdin.close()

